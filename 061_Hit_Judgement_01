# MoonWolf なでしこチャレンジ！ マウス判定＋敵移動＋あたり判定 v0.01
# マウスで自分の機体を左右うごかす + 敵が画面を移動する＋純粋な当たり判定
# bキーで弾を発射する

# 画面の設定
描画中キャンバスの「幅」に400をDOM属性設定。
描画中キャンバスの「高さ」に400をDOM属性設定。

# 自機の初期位置
自機X = 150
自機Y = 365

# 弾の位置
弾X = -100
弾Y = -100

# 敵の初期位置と移動方向
敵X = 0
敵Y = 50
敵移動方向Y = 3  # 上下移動方向
敵移動方向X = 3  # 左右移動方向

# マウス移動時の処理
描画中キャンバスをマウス移動した時には
    自機X = マウスX
ここまで。

# キー押した時の処理
DOCUMENTのキー押した時には
    もし、押されたキーが「b」ならば
        もし、弾Y == -100ならば
            # 弾を発射
            弾X = 自機X
            弾Y = 自機Y
        ここまで。
    ここまで。
ここまで。

# 当たり判定関数
関数 当たり判定(敵X, 敵Y, 弾X, 弾Y)
    もし、絶対値(敵X - 弾X) < 15 かつ 絶対値(敵Y - 弾Y) < 15 ならば
        当たり表示(敵X, 敵Y + 25)
        弾X = -100
        弾Y = -100
    ここまで。
ここまで。

# 当たり表示関数
関数 当たり表示(x, y)
    赤色に塗色設定。
    「20px sans-serif」に描画フォント設定。
    [x, y]に"当たり！"を文字描画。
    0.5秒待つ
    黒色に塗色設定。
    [x, y]に"当たり！"を文字描画。
ここまで。

# 敵の移動関数
関数 敵移動()
    敵X = 敵X + 2 * 敵移動方向X
    敵Y = 敵Y + 2 * 敵移動方向Y
    
    # 上下のはね返り処理
    もし、敵Y >= 300 または 敵Y <= 0 ならば
        敵移動方向Y = 敵移動方向Y * -1
    ここまで。
    
    # 左右のはね返り処理
    もし、敵X >= 400 または 敵X <= 0 ならば
        敵移動方向X = 敵移動方向X * -1
    ここまで。
ここまで。

# メインループ
10000回繰り返す
    # 画面を再描画
    黒色に塗色設定。
    [0, 0, 400, 400]に四角描画。

    # 自機の描画
    水色に塗色設定。
    青色に線色設定。10に線太設定。
    [自機X, 自機Y]へ20の円描画。

    # 弾の移動と描画
    もし、弾Y > -100ならば
        赤色に塗色設定。
        弾Y = 弾Y - 15
        もし、弾Y > 0ならば
            [弾X, 弾Y]へ5の円描画。
        ここまで。
        もし、弾Y <= 0ならば
            # 弾が画面外に出たら初期化
            弾X = -100
            弾Y = -100
        ここまで。
    ここまで。

    # 敵の移動と描画
    敵移動()
    黄色に塗色設定。
    [敵X, 敵Y]へ20の円描画。

    # 当たり判定のチェック
    当たり判定(敵X, 敵Y, 弾X, 弾Y)

    0.03秒待つ
ここまで。
